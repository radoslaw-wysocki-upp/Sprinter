FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    PYENV_ROOT=/opt/pyenv \
    PATH=/opt/pyenv/bin:/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    UV_LINK_MODE=copy

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential git curl ca-certificates gnupg \
    xvfb libxkbcommon-x11-0 libsm6 libxext6 libgl1 libegl1 \
    libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
    libffi-dev liblzma-dev uuid-dev passwd \
    nodejs npm \
 && rm -rf /var/lib/apt/lists/*

RUN if id -u ubuntu >/dev/null 2>&1; then \
      echo "User 'ubuntu' already exists"; \
    else \
      useradd -m -s /bin/bash ubuntu; \
    fi

RUN git clone https://github.com/pyenv/pyenv.git "$PYENV_ROOT"

SHELL ["/bin/bash", "-lc"]
ENV PYTHON_BUILD_OPTS="--verbose"
# Adjust versions as needed; we’ll build venvs for each of these
ENV PY_VERS="3.11.13 3.12.5"

RUN eval "$(pyenv init -)" \
 && for v in $PY_VERS; do pyenv install -s "$v"; done \
 && pyenv global 3.12.5

SHELL ["/bin/sh", "-c"]

ENV UV_INSTALL_DIR=/usr/local/bin
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

COPY requirements.txt /tmp/requirements.txt

# Create a venv for each Python, preinstall deps once
SHELL ["/bin/bash", "-lc"]
RUN set -euo pipefail; \
    mkdir -p /opt/venvs; \
    for v in $PY_VERS; do \
      majmin="${v%.*}"; \
      pybin="$(pyenv root)/versions/${v}/bin/python"; \
      "$pybin" -m venv "/opt/venvs/py${majmin#*.}${majmin##*.}"; \
      . "/opt/venvs/py${majmin#*.}${majmin##*.}/bin/activate"; \
      python -m pip install --upgrade pip; \
      uv pip install -r /tmp/requirements.txt; \
    done; \
    rm -f /tmp/requirements.txt

# ✅ Give the runtime user ownership of all venvs
RUN chown -R ubuntu:ubuntu /opt/venvs

# Runtime selector: choose venv by PY_VERSION or UV_PYTHON; default 3.12
RUN cat > /usr/local/bin/activate-venv <<'SH' \
 && chmod +x /usr/local/bin/activate-venv
#!/bin/sh
ver="${PY_VERSION:-${UV_PYTHON:-3.12}}"
case "$ver" in
  3.11*) vdir="/opt/venvs/py311" ;;
  3.12*) vdir="/opt/venvs/py312" ;;
  *) vdir="/opt/venvs/py312" ;;
esac
if [ -d "$vdir" ]; then
  export VIRTUAL_ENV="$vdir"
  export PATH="$VIRTUAL_ENV/bin:$PATH"
fi
exec "$@"
SH

ENV UV_PYTHON=3.12
ENTRYPOINT ["/usr/local/bin/activate-venv"]

USER ubuntu
WORKDIR /home/ubuntu
